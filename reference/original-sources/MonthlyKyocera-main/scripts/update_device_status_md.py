#!/usr/bin/env python3
"""
Scans all device folders and model subfolders, updates device_serials_status.json, and generates DEVICE_STATUS.md as a Markdown table.
Ensures no serial is deleted, only updated or added.
"""
import json
from pathlib import Path

DEVICES_DIR = Path(__file__).parent.parent / 'devices'
STATUS_JSON = DEVICES_DIR / 'device_serials_status.json'
STATUS_MD = DEVICES_DIR / 'DEVICE_STATUS.md'
MODEL_FOLDERS = {'TASKalfa-5054ci': 'TASKalfa 5054ci', 'TASKalfa-5004i': 'TASKalfa 5004i'}

# Helper to extract serial from folder name
def extract_serial(folder_name):
    parts = folder_name.split('_', 1)
    if len(parts) == 2:
        return parts[1]
    return None

def scan_folders():
    serials = {}
    # Top-level device folders
    for folder in DEVICES_DIR.iterdir():
        if folder.is_dir() and not folder.name.startswith('TASKalfa-'):
            serial = extract_serial(folder.name)
            if serial:
                serials[serial] = {'category': 'Uncategorized', 'folder': folder.name}
    # Model subfolders
    for model_folder, model_name in MODEL_FOLDERS.items():
        model_path = DEVICES_DIR / model_folder
        if model_path.exists():
            for folder in model_path.iterdir():
                if folder.is_dir():
                    serial = extract_serial(folder.name)
                    if serial:
                        serials[serial] = {'category': model_name, 'folder': folder.name}
    return serials

def main():
    # Load baseline
    if STATUS_JSON.exists():
        with open(STATUS_JSON, 'r', encoding='utf-8') as f:
            baseline = json.load(f)
    else:
        baseline = {}
    # Scan current
    current = scan_folders()
    # Merge: never delete, only update/add
    merged = baseline.copy()
    for serial, info in current.items():
        merged[serial] = info
    # Write updated JSON
    with open(STATUS_JSON, 'w', encoding='utf-8') as f:
        json.dump(merged, f, indent=2, ensure_ascii=False)
    # Write Markdown table
    with open(STATUS_MD, 'w', encoding='utf-8') as f:
        f.write("# Device Serial Categorization Status\n\n")
        f.write("| Serial Number | Folder Name | Category |\n")
        f.write("|--------------|-------------|----------|\n")
        for serial, info in sorted(merged.items()):
            f.write(f"| {serial} | {info['folder']} | {info['category']} |\n")
        f.write("\n_Last updated: generated by update_device_status_md.py_\n")

if __name__ == "__main__":
    main()
